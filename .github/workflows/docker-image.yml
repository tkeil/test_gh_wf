name: Docker Image CI

on:
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      changelog:
        description: "changelog"
        default: "- ddd"
        type: "string"
        required: true
      publish_artifacts:
        description: 'Publish artifacts'
        required: true
        default: 'false'


jobs:

  checkout-test:

#    runs-on: ubuntu-latest
    runs-on: self-hosted
    # Approval Step
    environment: release

    steps:
    - id: checkout-private
      name: Checkout - Private
      run: |
        the_secret=$((RANDOM))
        echo "{secret-number}={$the_secret}" >> $GITHUB_OUTPUT
        echo "{name}={value}" >> $GITHUB_STATE

#        echo "::add-mask::$the_secret"

    - id: checkout-private2
      name: Checkout - Private2
      run: |
        date
        date -u
        pwd
        ls -al
        echo "the secret number is ${{ steps.sets-a-secret.outputs.secret-number }}"
        rm -rf asvsam-installer
        git clone https://github.com/asvsam/asvsam-installer.git
        ls -al
        find .
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#      run: echo "${{ secrets.DOCKERHUB_USERNAME }}" > ddd;cat ddd; ls -al ddd;git clone https://github.com/asvsam/asvsam-installer.git;ls -al; find asvsam-installer

  build:
    needs: checkout-test
    runs-on: self-hosted

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3

#     -
#       name: Build the Docker image
#       run: docker build . --file Dockerfile --tag debian-builder:$(date +%s)

    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    -
      name: Run shell command
      run: pwd; id; hostname; ls -al; echo $DOCKERHUB_USERNAME; echo ${{ secrets.DOCKERHUB_USERNAME }}; echo ${{ inputs.changelog }}; echo "${{ github.event.inputs.publish_artifacts }} __"
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    - name: Configure GPG Key
      run: . ./build_helper.sh; config_gpg
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/debian-builder:latest

    - if: github.event.inputs.publish_artifacts == 'true'
      name: Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: build/web
